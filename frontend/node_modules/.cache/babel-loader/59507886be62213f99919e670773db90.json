{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[id,setId]=useState('');const[expirationDate,setExpirationDate]=useState('');const[paymentAmount,setPaymentAmount]=useState('');const[message,setMessage]=useState('');const[availableAmount,setAvailableAmount]=useState('');const[billedAmount,setBilledAmount]=useState('');const[showConfirmButton,setShowConfirmButton]=useState(false);const handleSubmit=async()=>{try{const response=await fetch('/api/submit-payment',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id,expirationDate,paymentAmount})});const data=await response.json();setMessage(data.message);if(response.ok){setShowConfirmButton(true);}}catch(error){console.error('Error:',error);setMessage('Error sending data');setShowConfirmButton(false);}};const confirmPayment=async()=>{try{const response=await fetch('/api/confirm-payment',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id,paymentAmount})});if(response.ok){// 支払いが確定された後、ページをリロードする\nwindow.location.reload();}else{const data=await response.json();setMessage(data.message);setShowConfirmButton(false);}}catch(error){console.error('Error:',error);}};const checkAmounts=async()=>{try{const response=await fetch('/api/check-amounts',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id,expirationDate})});const data=await response.json();setAvailableAmount(data.availableAmount);setBilledAmount(data.billedAmount);}catch(error){console.error('Error:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Form\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"ID\",value:id,onChange:e=>setId(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Expiration Date (YY/MM)\",value:expirationDate,onChange:e=>setExpirationDate(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Payment Amount\",value:paymentAmount,onChange:e=>setPaymentAmount(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,disabled:!id||!expirationDate||!paymentAmount,children:\"Send\"}),showConfirmButton&&/*#__PURE__*/_jsx(\"button\",{onClick:confirmPayment,children:\"Confirm Payment\"}),/*#__PURE__*/_jsx(\"button\",{onClick:checkAmounts,children:\"Check Available & Billed Amounts\"}),/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Available Amount: \",availableAmount]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Billed Amount: \",billedAmount]})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","id","setId","expirationDate","setExpirationDate","paymentAmount","setPaymentAmount","message","setMessage","availableAmount","setAvailableAmount","billedAmount","setBilledAmount","showConfirmButton","setShowConfirmButton","handleSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","console","confirmPayment","window","location","reload","checkAmounts","children","type","placeholder","value","onChange","e","target","onClick","disabled"],"sources":["/Users/nishio/Desktop/FR/gitのコピー/software2/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [id, setId] = useState('');\n  const [expirationDate, setExpirationDate] = useState('');\n  const [paymentAmount, setPaymentAmount] = useState('');\n  const [message, setMessage] = useState('');\n  const [availableAmount, setAvailableAmount] = useState('');\n  const [billedAmount, setBilledAmount] = useState('');\n  const [showConfirmButton, setShowConfirmButton] = useState(false);\n\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('/api/submit-payment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id, expirationDate, paymentAmount }),\n      });\n      const data = await response.json();\n      setMessage(data.message);\n      if (response.ok) {\n        setShowConfirmButton(true);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage('Error sending data');\n      setShowConfirmButton(false);\n    }\n  };\n\n  const confirmPayment = async () => {\n    try {\n      const response = await fetch('/api/confirm-payment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id, paymentAmount }),\n      });\n      if (response.ok) {\n        // 支払いが確定された後、ページをリロードする\n        window.location.reload();\n      } else {\n        const data = await response.json();\n        setMessage(data.message);\n        setShowConfirmButton(false);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  \n\n  const checkAmounts = async () => {\n    try {\n      const response = await fetch('/api/check-amounts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id, expirationDate }),\n      });\n      const data = await response.json();\n      setAvailableAmount(data.availableAmount);\n      setBilledAmount(data.billedAmount);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Payment Form</h1>\n      <input type=\"text\" placeholder=\"ID\" value={id} onChange={e => setId(e.target.value)} />\n      <input type=\"text\" placeholder=\"Expiration Date (YY/MM)\" value={expirationDate} onChange={e => setExpirationDate(e.target.value)} />\n      <input type=\"number\" placeholder=\"Payment Amount\" value={paymentAmount} onChange={e => setPaymentAmount(e.target.value)} />\n      <button onClick={handleSubmit} disabled={!id || !expirationDate || !paymentAmount}>Send</button>\n      {showConfirmButton && (\n        <button onClick={confirmPayment}>Confirm Payment</button>\n      )}\n      <button onClick={checkAmounts}>Check Available & Billed Amounts</button>\n      <p>{message}</p>\n      <div>Available Amount: {availableAmount}</div>\n      <div>Billed Amount: {billedAmount}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}