{"version":3,"sources":["App.js","index.js"],"names":["App","id","setId","useState","expirationDate","setExpirationDate","paymentAmount","setPaymentAmount","message","setMessage","availableAmount","setAvailableAmount","billedAmount","setBilledAmount","showConfirmButton","setShowConfirmButton","_jsxs","children","_jsx","type","placeholder","value","onChange","e","target","onClick","async","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","console","disabled","window","location","reload","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"8JA0FeA,MAxFf,WACE,MAAOC,EAAIC,GAASC,mBAAS,KACtBC,EAAgBC,GAAqBF,mBAAS,KAC9CG,EAAeC,GAAoBJ,mBAAS,KAC5CK,EAASC,GAAcN,mBAAS,KAChCO,EAAiBC,GAAsBR,mBAAS,KAChDS,EAAcC,GAAmBV,mBAAS,KAC1CW,EAAmBC,GAAwBZ,oBAAS,GA2D3D,OACEa,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,iBACJC,cAAA,SAAOC,KAAK,OAAOC,YAAY,KAAKC,MAAOpB,EAAIqB,SAAUC,GAAKrB,EAAMqB,EAAEC,OAAOH,SAC7EH,cAAA,SAAOC,KAAK,OAAOC,YAAY,0BAA0BC,MAAOjB,EAAgBkB,SAAUC,GAAKlB,EAAkBkB,EAAEC,OAAOH,SAC1HH,cAAA,SAAOC,KAAK,SAASC,YAAY,iBAAiBC,MAAOf,EAAegB,SAAUC,GAAKhB,EAAiBgB,EAAEC,OAAOH,UAE/GP,GACAI,cAAA,UAAQO,QAjEOC,UACnB,IACE,MAAMC,QAAiBC,MAAM,sBAAuB,CAClDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEhC,KAAIG,iBAAgBE,oBAEvC4B,QAAaP,EAASQ,OAC5B1B,EAAWyB,EAAK1B,SAChBO,EAAqBY,EAASS,GAChC,CAAE,MAAOC,GACPC,QAAQD,MAAM,SAAUA,GACxB5B,EAAW,sBACXM,GAAqB,EACvB,GAiDmCwB,UAAWtC,IAAOG,IAAmBE,EAAcW,SAAC,SAGpFH,GACCI,cAAA,UAAQO,QAlDSC,UACrB,IACE,MAAMC,QAAiBC,MAAM,uBAAwB,CACnDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEhC,KAAIK,oBAE7B,GAAIqB,EAASS,GACXI,OAAOC,SAASC,aACX,CACL,MAAMR,QAAaP,EAASQ,OAC5B1B,EAAWyB,EAAK1B,SAChBO,GAAqB,EACvB,CACF,CAAE,MAAOsB,GACPC,QAAQD,MAAM,SAAUA,EAC1B,GAgCoCpB,SAAC,oBAEnCC,cAAA,UAAQO,QA/BSC,UACnB,IACE,MAAMC,QAAiBC,MAAM,qBAAsB,CACjDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEhC,KAAIG,qBAEvB8B,QAAaP,EAASQ,OAC5BxB,EAAmBuB,EAAKxB,iBACxBG,EAAgBqB,EAAKtB,aACvB,CAAE,MAAOyB,GACPC,QAAQD,MAAM,SAAUA,EAC1B,GAiBgCpB,SAAC,qCAC/BC,cAAA,KAAAD,SAAIT,IACJQ,eAAA,OAAAC,SAAA,CAAK,qBAAmBP,KACxBM,eAAA,OAAAC,SAAA,CAAK,kBAAgBL,OAG3B,ECnFA+B,IAASC,OACP1B,cAAC2B,IAAMC,WAAU,CAAA7B,SACfC,cAAClB,EAAG,MAEN+C,SAASC,eAAe,Q","file":"static/js/main.4eae5e49.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [id, setId] = useState('');\n  const [expirationDate, setExpirationDate] = useState('');\n  const [paymentAmount, setPaymentAmount] = useState('');\n  const [message, setMessage] = useState('');\n  const [availableAmount, setAvailableAmount] = useState('');\n  const [billedAmount, setBilledAmount] = useState('');\n  const [showConfirmButton, setShowConfirmButton] = useState(false);\n\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('/api/submit-payment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id, expirationDate, paymentAmount }),\n      });\n      const data = await response.json();\n      setMessage(data.message);\n      setShowConfirmButton(response.ok);  // ステータスに基づいてボタンの表示を切り替える\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage('Error sending data');\n      setShowConfirmButton(false);\n    }\n  };\n\n  const confirmPayment = async () => {\n    try {\n      const response = await fetch('/api/confirm-payment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id, paymentAmount }),\n      });\n      if (response.ok) {\n        window.location.reload();\n      } else {\n        const data = await response.json();\n        setMessage(data.message);\n        setShowConfirmButton(false);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const checkAmounts = async () => {\n    try {\n      const response = await fetch('/api/check-amounts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id, expirationDate }),\n      });\n      const data = await response.json();\n      setAvailableAmount(data.availableAmount);\n      setBilledAmount(data.billedAmount);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Payment Form</h1>\n      <input type=\"text\" placeholder=\"ID\" value={id} onChange={e => setId(e.target.value)} />\n      <input type=\"text\" placeholder=\"Expiration Date (YY/MM)\" value={expirationDate} onChange={e => setExpirationDate(e.target.value)} />\n      <input type=\"number\" placeholder=\"Payment Amount\" value={paymentAmount} onChange={e => setPaymentAmount(e.target.value)} />\n      {/* 「送信」ボタンの表示・非表示を制御 */}\n      {!showConfirmButton && (\n        <button onClick={handleSubmit} disabled={!id || !expirationDate || !paymentAmount}>Send</button>\n      )}\n      {/* 「支払いの確認」ボタン */}\n      {showConfirmButton && (\n        <button onClick={confirmPayment}>Confirm Payment</button>\n      )}\n      <button onClick={checkAmounts}>Check Available & Billed Amounts</button>\n      <p>{message}</p>\n      <div>Available Amount: {availableAmount}</div>\n      <div>Billed Amount: {billedAmount}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}